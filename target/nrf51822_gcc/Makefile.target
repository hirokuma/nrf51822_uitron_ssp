#
#		Makefile のターゲット依存部(nRF51822)
#

#
#  ボード名，プロセッサ名，開発環境名の定義
#
BOARD = nrf51822
PRC   = arm_nrf51
TOOL  = gcc

#
# nRF51 SDK path
#
#NRF51_SDK_PATH = $(realpath ../../..)
#NRF51_PRJ_PATH = $(realpath ../..)
NRF51_SDK_PATH = ../../..
NRF51_PRJ_PATH = ../..

NRF51_CFLAGS  = -DNRF51
NRF51_CFLAGS += -DBLE_STACK_SUPPORT_REQD
NRF51_CFLAGS += -DS110
NRF51_CFLAGS += -DSOFTDEVICE_PRESENT
NRF51_CFLAGS += -DSWI_DISABLE0

NRF51_CFLAGS += -mabi=aapcs --std=gnu99
NRF51_CFLAGS += -mfloat-abi=soft
#NRF51_CFLAGS += -ffunction-sections -fdata-sections -fno-strict-aliasing
#NRF51_CFLAGS += -flto -fno-builtin --short-enums

#includes common to all targets
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/toolchain/gcc
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/toolchain
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/libraries/sensorsim
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/libraries/timer
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/libraries/scheduler
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/libraries/util
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/libraries/trace
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/libraries/fifo
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/softdevice/s110/headers
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/softdevice/common/softdevice_handler
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/device
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/ble/common
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/ble/device_manager
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/ble/ble_advertising
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/drivers_nrf/common
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/drivers_nrf/hal
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/drivers_nrf/gpiote
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/drivers_nrf/pstorage
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/drivers_nrf/pstorage/config
NRF51_INC_PATHS += -I$(NRF51_SDK_PATH)/components/drivers_nrf/uart
#includes project
NRF51_INC_PATHS += -I$(NRF51_PRJ_PATH)/config
NRF51_INC_PATHS += -I$(NRF51_PRJ_PATH)/services


#
#  GNU開発環境のターゲットアーキテクチャの定義
#
GCC_TARGET = arm-none-eabi

#
#  各セグメントの開始アドレスの定義
#

#
#  コンパイルオプション
#
INCLUDES += -I$(TARGETDIR) $(NRF51_INC_PATHS)
CDEFS += -D__NEWLIB__ -DTOPPERS_OMIT_SYSLOG
COPTS += $(NRF51_CFLAGS) -mcpu=cortex-m0 -mthumb

#
#  カーネルに関する定義
#
KERNEL_DIR += $(TARGETDIR)
KERNEL_ASMOBJS += target_support.o
#KERNEL_COBJS += target_config.o target_serial.o
KERNEL_COBJS += target_config.o  system_nrf51.o
KERNEL_CFLAGS += -fno-strict-aliasing

#
#  システムサービスに関する定義
#
SYSSVC_DIR := $(SYSSVC_DIR)
SYSSVC_COBJS := $(SYSSVC_COBJS)
SYSSVC_CFLAGS := $(SYSSVC_CFLAGS)

#
#  コンフィギュレータ関係の変数の定義
#
CFG_TABS := $(CFG_TABS) --cfg1-def-table $(TARGETDIR)/target_def.csv

#
#  トレースログに関する設定
#
ifeq ($(ENABLE_TRACE),true)
	COPTS := $(COPTS) -DTOPPERS_ENABLE_TRACE
	KERNEL_DIR := $(KERNEL_DIR) $(SRCDIR)/arch/logtrace
	KERNEL_COBJS := $(KERNEL_COBJS) trace_config.o trace_dump.o
endif


#
#  リンカスクリプトの定義
#
LDSCRIPT = $(SRCDIR)/target/$(BOARD)_$(TOOL)/nordic_nrf51822.ld

#
#  スタートアップモジュールに関する定義
#
#  リンカスクリプトに「STARTUP(start.o)」を記述したため，スタートアップモジュー
#  ルの名前をHIDDEN_OBJSに定義する．また，LDFLAGSに-nostdlibを追加している．
#
HIDDEN_OBJS = start.o

$(HIDDEN_OBJS): %.o: %.S
	$(CC) -c $(CFLAGS) $(KERNEL_CFLAGS) $<

$(HIDDEN_OBJS:.o=.d): %.d: %.S
	@$(PERL) $(SRCDIR)/utils/makedep -C $(CC) \
		-O "$(CFLAGS) $(KERNEL_CFLAGS)" $< >> Makefile.depend

LDFLAGS := -nostdlib $(LDFLAGS) --entry=_start

#
#  依存関係の定義
#
cfg1_out.c: $(TARGETDIR)/target_def.csv
kernel_cfg.timestamp: $(TARGETDIR)/target.tf
$(OBJFILE): $(TARGETDIR)/target_check.tf

#
#  プロセッサ依存部のインクルード
#
include $(SRCDIR)/arch/$(PRC)_$(TOOL)/Makefile.prc
